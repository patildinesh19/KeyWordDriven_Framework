<?xml version="1.0" encoding="UTF-8"?>
<testng-results total="8" passed="6" failed="2" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-06-22T08:30:58Z" name="Suite" finished-at="2023-06-22T08:31:22Z" duration-ms="24153">
    <groups>
    </groups>
    <test started-at="2023-06-22T08:30:58Z" name="Test" finished-at="2023-06-22T08:31:22Z" duration-ms="24153">
      <class name="Operation.BaseClass">
        <test-method is-config="true" signature="startreport()[pri:0, instance:Operation.BaseClass@1349883]" started-at="2023-06-22T14:00:58Z" name="startreport" finished-at="2023-06-22T14:00:58Z" duration-ms="110" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startreport -->
        <test-method signature="readtestsuiteandexecutetestcase(java.lang.Object, java.lang.Object, java.lang.Object)[pri:0, instance:Operation.BaseClass@1349883]" started-at="2023-06-22T14:00:59Z" name="readtestsuiteandexecutetestcase" data-provider="readtestsuite" finished-at="2023-06-22T14:01:02Z" duration-ms="3609" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[VERIFY_INVALID_LOGIN_MESSAGE]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Y]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Regression]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: null
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.fail(Assert.java:101)
	at com.tf.excel.readsheet_task.transaction(readsheet_task.java:137)
	at com.tf.excel.readsheet_task.readtask_assheet(readsheet_task.java:111)
	at Operation.BaseClass.readtestsuiteandexecutetestcase(BaseClass.java:55)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:308)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:71)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:113)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- readtestsuiteandexecutetestcase -->
        <test-method is-config="true" signature="takeFailTestCaseScrrenShot(org.testng.ITestResult)[pri:0, instance:Operation.BaseClass@1349883]" started-at="2023-06-22T14:01:02Z" name="takeFailTestCaseScrrenShot" finished-at="2023-06-22T14:01:03Z" duration-ms="752" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=readtestsuiteandexecutetestcase status=FAILURE method=BaseClass.readtestsuiteandexecutetestcase(java.lang.Object, java.lang.Object, java.lang.Object)[pri:0, instance:Operation.BaseClass@1349883] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeFailTestCaseScrrenShot -->
        <test-method signature="readtestsuiteandexecutetestcase(java.lang.Object, java.lang.Object, java.lang.Object)[pri:0, instance:Operation.BaseClass@1349883]" started-at="2023-06-22T14:01:03Z" name="readtestsuiteandexecutetestcase" data-provider="readtestsuite" finished-at="2023-06-22T14:01:06Z" duration-ms="3032" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[VERIFY_SUCESSFULLY_LOGIN]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Y]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Regression]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[null]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: null
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.fail(Assert.java:101)
	at com.tf.excel.readsheet_task.transaction(readsheet_task.java:137)
	at com.tf.excel.readsheet_task.readtask_assheet(readsheet_task.java:111)
	at Operation.UI_Operation.perfrom(UI_Operation.java:47)
	at com.tf.excel.readsheet_task.transaction(readsheet_task.java:132)
	at com.tf.excel.readsheet_task.readtask_assheet(readsheet_task.java:111)
	at Operation.BaseClass.readtestsuiteandexecutetestcase(BaseClass.java:55)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:80)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:714)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:901)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1231)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:127)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:111)
	at org.testng.TestRunner.privateRun(TestRunner.java:767)
	at org.testng.TestRunner.run(TestRunner.java:617)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:334)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:329)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:291)
	at org.testng.SuiteRunner.run(SuiteRunner.java:240)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1198)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1123)
	at org.testng.TestNG.run(TestNG.java:1031)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:308)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:71)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:113)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- readtestsuiteandexecutetestcase -->
        <test-method is-config="true" signature="takeFailTestCaseScrrenShot(org.testng.ITestResult)[pri:0, instance:Operation.BaseClass@1349883]" started-at="2023-06-22T14:01:06Z" name="takeFailTestCaseScrrenShot" finished-at="2023-06-22T14:01:07Z" duration-ms="385" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=readtestsuiteandexecutetestcase status=FAILURE method=BaseClass.readtestsuiteandexecutetestcase(java.lang.Object, java.lang.Object, java.lang.Object)[pri:0, instance:Operation.BaseClass@1349883] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeFailTestCaseScrrenShot -->
        <test-method signature="readtestsuiteandexecutetestcase(java.lang.Object, java.lang.Object, java.lang.Object)[pri:0, instance:Operation.BaseClass@1349883]" started-at="2023-06-22T14:01:07Z" name="readtestsuiteandexecutetestcase" data-provider="readtestsuite" finished-at="2023-06-22T14:01:07Z" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[VERIFY_CART_WITHOUT_PRODUCT]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Y]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Smoke]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- readtestsuiteandexecutetestcase -->
        <test-method is-config="true" signature="takeFailTestCaseScrrenShot(org.testng.ITestResult)[pri:0, instance:Operation.BaseClass@1349883]" started-at="2023-06-22T14:01:07Z" name="takeFailTestCaseScrrenShot" finished-at="2023-06-22T14:01:07Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=readtestsuiteandexecutetestcase status=SUCCESS method=BaseClass.readtestsuiteandexecutetestcase(java.lang.Object, java.lang.Object, java.lang.Object)[pri:0, instance:Operation.BaseClass@1349883] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeFailTestCaseScrrenShot -->
        <test-method signature="readtestsuiteandexecutetestcase(java.lang.Object, java.lang.Object, java.lang.Object)[pri:0, instance:Operation.BaseClass@1349883]" started-at="2023-06-22T14:01:07Z" name="readtestsuiteandexecutetestcase" data-provider="readtestsuite" finished-at="2023-06-22T14:01:22Z" duration-ms="15717" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[ADD_PRODUCT_AND_VERIFY]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Y]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Regression]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- readtestsuiteandexecutetestcase -->
        <test-method is-config="true" signature="takeFailTestCaseScrrenShot(org.testng.ITestResult)[pri:0, instance:Operation.BaseClass@1349883]" started-at="2023-06-22T14:01:22Z" name="takeFailTestCaseScrrenShot" finished-at="2023-06-22T14:01:22Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=readtestsuiteandexecutetestcase status=SUCCESS method=BaseClass.readtestsuiteandexecutetestcase(java.lang.Object, java.lang.Object, java.lang.Object)[pri:0, instance:Operation.BaseClass@1349883] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeFailTestCaseScrrenShot -->
        <test-method signature="readtestsuiteandexecutetestcase(java.lang.Object, java.lang.Object, java.lang.Object)[pri:0, instance:Operation.BaseClass@1349883]" started-at="2023-06-22T14:01:22Z" name="readtestsuiteandexecutetestcase" data-provider="readtestsuite" finished-at="2023-06-22T14:01:22Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[SEARCH_VEG]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[N]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Smoke]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- readtestsuiteandexecutetestcase -->
        <test-method is-config="true" signature="takeFailTestCaseScrrenShot(org.testng.ITestResult)[pri:0, instance:Operation.BaseClass@1349883]" started-at="2023-06-22T14:01:22Z" name="takeFailTestCaseScrrenShot" finished-at="2023-06-22T14:01:22Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=readtestsuiteandexecutetestcase status=SUCCESS method=BaseClass.readtestsuiteandexecutetestcase(java.lang.Object, java.lang.Object, java.lang.Object)[pri:0, instance:Operation.BaseClass@1349883] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeFailTestCaseScrrenShot -->
        <test-method signature="readtestsuiteandexecutetestcase(java.lang.Object, java.lang.Object, java.lang.Object)[pri:0, instance:Operation.BaseClass@1349883]" started-at="2023-06-22T14:01:22Z" name="readtestsuiteandexecutetestcase" data-provider="readtestsuite" finished-at="2023-06-22T14:01:22Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[SEARCH_VEG_AND_ORDER]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[N]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Smoke]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- readtestsuiteandexecutetestcase -->
        <test-method signature="readtestsuiteandexecutetestcase(java.lang.Object, java.lang.Object, java.lang.Object)[pri:0, instance:Operation.BaseClass@1349883]" started-at="2023-06-22T14:01:22Z" name="readtestsuiteandexecutetestcase" data-provider="readtestsuite" finished-at="2023-06-22T14:01:22Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[VERIFY_TOP_DEALS_LINK]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[N]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Smoke]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- readtestsuiteandexecutetestcase -->
        <test-method is-config="true" signature="takeFailTestCaseScrrenShot(org.testng.ITestResult)[pri:0, instance:Operation.BaseClass@1349883]" started-at="2023-06-22T14:01:22Z" name="takeFailTestCaseScrrenShot" finished-at="2023-06-22T14:01:22Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=readtestsuiteandexecutetestcase status=SUCCESS method=BaseClass.readtestsuiteandexecutetestcase(java.lang.Object, java.lang.Object, java.lang.Object)[pri:0, instance:Operation.BaseClass@1349883] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeFailTestCaseScrrenShot -->
        <test-method signature="readtestsuiteandexecutetestcase(java.lang.Object, java.lang.Object, java.lang.Object)[pri:0, instance:Operation.BaseClass@1349883]" started-at="2023-06-22T14:01:22Z" name="readtestsuiteandexecutetestcase" data-provider="readtestsuite" finished-at="2023-06-22T14:01:22Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[VERIFY_QUAN_PRICE_TOTAL_ORDER]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[N]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Smoke]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- readtestsuiteandexecutetestcase -->
        <test-method is-config="true" signature="takeFailTestCaseScrrenShot(org.testng.ITestResult)[pri:0, instance:Operation.BaseClass@1349883]" started-at="2023-06-22T14:01:22Z" name="takeFailTestCaseScrrenShot" finished-at="2023-06-22T14:01:22Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=readtestsuiteandexecutetestcase status=SUCCESS method=BaseClass.readtestsuiteandexecutetestcase(java.lang.Object, java.lang.Object, java.lang.Object)[pri:0, instance:Operation.BaseClass@1349883] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeFailTestCaseScrrenShot -->
        <test-method is-config="true" signature="takeFailTestCaseScrrenShot(org.testng.ITestResult)[pri:0, instance:Operation.BaseClass@1349883]" started-at="2023-06-22T14:01:22Z" name="takeFailTestCaseScrrenShot" finished-at="2023-06-22T14:01:22Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=readtestsuiteandexecutetestcase status=SUCCESS method=BaseClass.readtestsuiteandexecutetestcase(java.lang.Object, java.lang.Object, java.lang.Object)[pri:0, instance:Operation.BaseClass@1349883] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeFailTestCaseScrrenShot -->
        <test-method is-config="true" signature="suiteendactivity()[pri:0, instance:Operation.BaseClass@1349883]" started-at="2023-06-22T14:01:22Z" name="suiteendactivity" finished-at="2023-06-22T14:01:24Z" duration-ms="1756" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- suiteendactivity -->
      </class> <!-- Operation.BaseClass -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
